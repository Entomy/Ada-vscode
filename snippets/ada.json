{
	"accept": {
		"prefix": "accept",
		"body": [
			"accept ${1:Name}(${2:Parameters}) do",
			"end ${1};"
		],
		"description": "Accept Block"
	},
	"case": {
		"prefix": "case",
		"body": [
			"case ${1:Variable} then",
			"end case;"
		],
		"description": "Case Block"
	},
	"declare": {
		"prefix": "declare",
		"body": [
			"declare",
			"\t",
			"begin",
			"\t",
			"end;"
		],
		"description": "Declare Block"
	},
	"elsif": {
		"prefix": "elsif",
		"body": [
			"elsif ${1:Condition} then"
		],
		"description": "Elsif Block"
	},
	"for": {
		"prefix": "for",
		"body": [
			"for ${1:I} in ${2:Range} loop",
			"end loop;"
		],
		"description": "For Loop"
	},
	"foreach": {
		"prefix": "foreach",
		"body": [
			"for ${1:Item} of ${2:Collection} loop",
			"end loop;"
		]
	},
	"if": {
		"prefix": "if",
		"body": [
			"if ${1:Condition} then",
			"end if;"
		],
		"description": "If Block"
	},
	"ifex": {
		"prefix": "ifex",
		"body": [
			"(if ${1:Condition} then ${2:Do Stuff})"
		],
		"description": "If Expression"
	},
	"loop": {
		"prefix": "loop",
		"body": [
			"loop",
			"end loop;"
		],
		"description": "Loop Block"
	},
	"packagespec": {
		"prefix": "spec",
		"body": [
			"package ${1:Name} with ${2:Aspects} is",
			"end ${1};"
		],
		"description": "Package Spec Block"
	},
	"packagebody": {
		"prefix": "body",
		"body": [
			"package body ${1:Name} is",
			"end ${1};"
		],
		"description": "Package Body Block"
	},
	"pragma": {
		"prefix": "pragma",
		"body": [
			"pragma ${1|Abort_Defer,Ada_05,Ada_12,Ada_2005,Ada_2012,Ada_83,Ada_95,All_Calls_Remote,Annotate,Assert,Assertion_Policy,Assume_No_Invalid_Values,Ast_Entry,C_Pass_By_Copy,Canonical_Streams,Check,Check_Name,Check_Policy,Comment,Common_Object,Compile_Time_Error,Compile_Time_Warning,Complete_Representation,Complex_Representation,Component_Alignment,Convention_Identifier,CPP_Class,CPP_Constructor,CPP_Virtual,CPP_VTable,CPU,Debug,Debug_Policy,Default_Storage_Pool,Detect_Blocking,Discard_Names,Dispatching_Domain,Elaborate,Elaborate_All,Elaborate_Body,Elaboration_Checks,Eliminate,Export_Exception,Export_Function,Export_Object,Export_Procedure,Export_Value,Export_Valued_Procedure,Extend_System,Extensions_Allowed,External,External_Name_Casing,Fast_Math,Favor_Top_Level,Finalize_Storage_Only,Float_Representation,Ident,Implemented,Implicit_Packing,Import_Exception,Import_Function,Import_Object,Import_Procedure,Import_Valued_Procedure,Independent,Independent_Component,Initialize_Scalars,Inline_Always,Inline_Generic,Inspection_Point,Interface_Name,Interrupt_State,Invariant,Keep_Names,License,Link_With,Linker_Alias,Linker_Constructor,Linker_Destructor,Linker_Options,Linker_Section,List,Locking_Policy,Long_Float,Machine_Attribute,Main,Main_Storage,No_Body,No_Strict_Aliasing,Normalize_Scalars,Obsolescent,Optimize,Optimize_Alignment,Ordered,Page,Partial_Elaboration_Policy,Passive,Persistent_BSS,Polling,Postcondition,Precondition,Preelaborable_Initialization,Preelaborate,Priority_Specific_Dispatching,Profile,Profile_Warnings,Propagate_Exceptions,PSect_Object,Pure,Pure_Function,Queueing_Policy,Relative_Deadline,Remote_Call_Interface,Remote_Types,Restriction_Warnings,Restrictions,Reviewable,Share_Generic,Shared_Passive,Short_Circuit_And_Or,Short_Descriptors,Simple_Storage_Pool_Type,Source_File_Name,Source_file_name_project,Source_Reference,Static_Elaboration_Desired,Storage_Size,Stream_Convert,Style_Checks,Subtitle,Suppress,Suppress_All,Suppress_Exception_Locations,Suppress_Initialization,Task_Dispatching_Policy,Task_Info,Task_Name,Task_Storage,Test_Case,Thread_Body,Thread_Local_Storage,Time_Slice,Title,Unchecked_Union,Unimplemented_Unit,Universal_Aliasing,Universal_Data,Unmodified,Unreferenced,Unreferenced_Objects,Unreserve_All_Interrupts,Unsuppress,Use_VADS_Size,Validity_Checks,Volatile,Volatile_Components,Warnings,Weak_External,Wide_Character_Encoding|};"
		],
		"description": "Pragma"
	},
	"protectedtype": {
		"prefix": "protectedtype",
		"body": [
			"protected type ${1:Name} is",
			"private",
			"end ${1};"
		],
		"description": "Protected Type Block"
	},
	"protectedbody": {
		"prefix": "protectedbody",
		"body": [
			"protected body ${1:Name} is",
			"end ${1};"
		],
		"description": "Protected Body Block"
	},
	"record": {
		"prefix": "record",
		"body": [
			"type ${1:Name} is ${2:Modifiers} record",
			"end record;"
		],
		"description": "Record Block"
	},
	"tasktype": {
		"prefix": "tasktype",
		"body": [
			"task type ${1:Name} is",
			"end ${1};"
		],
		"description": "Task Type Block"
	},
	"taskbody": {
		"prefix": "taskbody",
		"body": [
			"task body ${1:Name} is",
			"begin",
			"end ${1};"
		],
		"description": "Task Body Block"
	},
	"when": {
		"prefix": "when",
		"body": [
			"when ${1:Condition} =>"
		],
		"description": "When Condition"
	},
	"while": {
		"prefix": "while",
		"body": [
			"while ${1:Condition} loop",
			"end loop;"
		],
		"description": "While Loop Block"
	}
}