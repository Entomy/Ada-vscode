{
	"accept": {
		"prefix": "accept",
		"body": [
			"accept ${1:Name}(${2:Parameters}) do",
			"end ${1};"
		],
		"description": "Accept Block"
	},
	"aspect": {
		"prefix": "aspect",
		"body": [
			"${1|Ada_2005,Ada_2012,Address,Alignment,All_Calls_Remote,Asynchronous,Atomic,Atomic_Components,Attach_Handler,Bit_Order,Component_Size,Constant_Indexing,Convention,CPU,Default_Component_Value,Default_Iterator,Default_Storage_Pool,Default_Value,Dispatching_Domain,Dynamic_Predicate,Elaborate_Body,Export,External_Name,External_Tag,Favor_Top_Level,Implicit_Dereference,Import,Independent,Independent_Components,Inline,Inline_Always,Input,Interrupt_Handler,Interrupt_Priority,Iterator_Element,Link_Name,Machine_Radix,No_Return,Object_Size,Output,Pack,Prsistent_BSS,Post,Pre,Preelaborate,Priority,Pure,Pure_Function,Read,Relative_Deadline,Remote_Access_Type,Remote_Call_Interface,Remote_Types,Shared,Shared_Passive,Size,Small,Static_Predicate,Storage_Pool,Storage_Size,Stream_Size,Suppress_Debug_Info,Synchronization,Test_Case,Type_Invariant,Unchecked_Union,Universal_Aliasing,Unmodified,Unreferenced,Unreferenced_Objects,Value_Size,Variable_Indexing,Volatile,Volatile_Components,Warnings,Write|}"
		],
		"description": "Aspect"
	},
	"attribute": {
		"prefix": "attribute",
		"body": [
			"'${1|abort_signal,access,address,address_size,adjacent,aft,alignment,asm_input,asm_output,ast_entry,base,bit,bit_order,bit_position,body_version,callable,caller,ceiling,class,code_address,component_size,compose,constrained,copy_sign,count,default_bit_order,definite,delta,denorm,digits,elab_body,elab_spec,elaborated,emax,enabled,enum_rep,enum_val,epsilon,exponent,external_tag,first,first_bit,fixed_value,floor,fore,fraction,has_access_values,has_discriminants,identity,image,img,input,integer_value,invalid_value,last,last_bit,leading_part,length,machanism_code,machine,machine_emax,machine_emin,machine_mantissa,machine_overflows,machine_radix,machine_rounding,machine_rounds,machine_size,max,max_alignment_for_allocation,max_interrupt_priority,max_priority,max_size_in_storage_elements,maximum_alignment,min,mod,model,model_emin,model_epsilon,model_mantissa,model_small,modulus,null_parameter,object_size,old,old,output,overlaps_storage,partition_id,passed_by_reference,pool_address,pos,position,pred,priority,range,range_length,read,remainder,result,round,rounding,safe_first,safe_last,scale,scaling,signed_zeros,size,small,storage_pool,storage_size,storage_unit,stream_size,stub_type,succ,tag,target_name,terminated,tick,to_address,truncation,type_class,uet_address,unbiased_rounding,unchecked_access,unconstrained_array,universal_literal_string,unrestricted_access,vads_size,val,valid,value,value_size,version,wchar_t_size,wide_image,wide_value,wide_wide_image,wide_wide_value,wide_wide_width,wide_width,width,word_size,write|}"
		],
		"description": "Aspect"
	},
	"case": {
		"prefix": "case",
		"body": [
			"case ${1:Variable} then",
			"end case;"
		],
		"description": "Case Block"
	},
	"declare": {
		"prefix": "declare",
		"body": [
			"declare",
			"\t",
			"begin",
			"\t",
			"end;"
		],
		"description": "Declare Block"
	},
	"elsif": {
		"prefix": "elsif",
		"body": [
			"elsif ${1:Condition} then"
		],
		"description": "Elsif Block"
	},
	"for": {
		"prefix": "for",
		"body": [
			"for ${1:I} in ${2:Range} loop",
			"end loop;"
		],
		"description": "For Loop"
	},
	"foreach": {
		"prefix": "foreach",
		"body": [
			"for ${1:Item} of ${2:Collection} loop",
			"end loop;"
		]
	},
	"if": {
		"prefix": "if",
		"body": [
			"if ${1:Condition} then",
			"end if;"
		],
		"description": "If Block"
	},
	"ifex": {
		"prefix": "ifex",
		"body": [
			"(if ${1:Condition} then ${2:Do Stuff})"
		],
		"description": "If Expression"
	},
	"loop": {
		"prefix": "loop",
		"body": [
			"loop",
			"end loop;"
		],
		"description": "Loop Block"
	},
	"packagespec": {
		"prefix": "spec",
		"body": [
			"package ${1:Name} with ${2:Aspects} is",
			"end ${1};"
		],
		"description": "Package Spec Block"
	},
	"packagebody": {
		"prefix": "body",
		"body": [
			"package body ${1:Name} is",
			"end ${1};"
		],
		"description": "Package Body Block"
	},
	"pragma": {
		"prefix": "pragma",
		"body": [
			"pragma ${1,Abort_Defer,Ada_05,Ada_12,Ada_2005,Ada_2012,Ada_83,Ada_95,All_Calls_Remote,Annotate,Assert,Assertion_Policy,Assume_No_Invalid_Values,Ast_Entry,C_Pass_By_Copy,Canonical_Streams,Check,Check_Name,Check_Policy,Comment,Common_Object,Compile_Time_Error,Compile_Time_Warning,Complete_Representation,Complex_Representation,Component_Alignment,Convention_Identifier,CPP_Class,CPP_Constructor,CPP_Virtual,CPP_VTable,CPU,Debug,Debug_Policy,Default_Storage_Pool,Detect_Blocking,Discard_Names,Dispatching_Domain,Elaborate,Elaborate_All,Elaborate_Body,Elaboration_Checks,Eliminate,Export_Exception,Export_Function,Export_Object,Export_Procedure,Export_Value,Export_Valued_Procedure,Extend_System,Extensions_Allowed,External,External_Name_Casing,Fast_Math,Favor_Top_Level,Finalize_Storage_Only,Float_Representation,Ident,Implemented,Implicit_Packing,Import_Exception,Import_Function,Import_Object,Import_Procedure,Import_Valued_Procedure,Independent,Independent_Component,Initialize_Scalars,Inline_Always,Inline_Generic,Inspection_Point,Interface_Name,Interrupt_State,Invariant,Keep_Names,License,Link_With,Linker_Alias,Linker_Constructor,Linker_Destructor,Linker_Options,Linker_Section,List,Locking_Policy,Long_Float,Machine_Attribute,Main,Main_Storage,No_Body,No_Strict_Aliasing,Normalize_Scalars,Obsolescent,Optimize,Optimize_Alignment,Ordered,Page,Partial_Elaboration_Policy,Passive,Persistent_BSS,Polling,Postcondition,Precondition,Preelaborable_Initialization,Preelaborate,Priority_Specific_Dispatching,Profile,Profile_Warnings,Propagate_Exceptions,PSect_Object,Pure,Pure_Function,Queueing_Policy,Relative_Deadline,Remote_Call_Interface,Remote_Types,Restriction_Warnings,Restrictions,Reviewable,Share_Generic,Shared_Passive,Short_Circuit_And_Or,Short_Descriptors,Simple_Storage_Pool_Type,Source_File_Name,Source_file_name_project,Source_Reference,Static_Elaboration_Desired,Storage_Size,Stream_Convert,Style_Checks,Subtitle,Suppress,Suppress_All,Suppress_Exception_Locations,Suppress_Initialization,Task_Dispatching_Policy,Task_Info,Task_Name,Task_Storage,Test_Case,Thread_Body,Thread_Local_Storage,Time_Slice,Title,Unchecked_Union,Unimplemented_Unit,Universal_Aliasing,Universal_Data,Unmodified,Unreferenced,Unreferenced_Objects,Unreserve_All_Interrupts,Unsuppress,Use_VADS_Size,Validity_Checks,Volatile,Volatile_Components,Warnings,Weak_External,Wide_Character_Encoding,};"
		],
		"description": "Pragma"
	},
	"protectedtype": {
		"prefix": "protectedtype",
		"body": [
			"protected type ${1:Name} is",
			"private",
			"end ${1};"
		],
		"description": "Protected Type Block"
	},
	"protectedbody": {
		"prefix": "protectedbody",
		"body": [
			"protected body ${1:Name} is",
			"end ${1};"
		],
		"description": "Protected Body Block"
	},
	"record": {
		"prefix": "record",
		"body": [
			"type ${1:Name} is ${2:Modifiers} record",
			"end record;"
		],
		"description": "Record Block"
	},
	"tasktype": {
		"prefix": "tasktype",
		"body": [
			"task type ${1:Name} is",
			"end ${1};"
		],
		"description": "Task Type Block"
	},
	"taskbody": {
		"prefix": "taskbody",
		"body": [
			"task body ${1:Name} is",
			"begin",
			"end ${1};"
		],
		"description": "Task Body Block"
	},
	"when": {
		"prefix": "when",
		"body": [
			"when ${1:Condition} =>"
		],
		"description": "When Condition"
	},
	"while": {
		"prefix": "while",
		"body": [
			"while ${1:Condition} loop",
			"end loop;"
		],
		"description": "While Loop Block"
	}
}