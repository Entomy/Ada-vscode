{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "adc",
    "patterns": [
        { "include": "#pragmas" }
    ],
    "repository": {
        "pragmas": {
            "name": "meta.pragmas.adc",
            "begin": "pragma",
            "end": ";",
            "captures": {
                "0": {
                    "patterns": [
                        { "include": "#keywords" },
                        { "include": "#punctuation" }
                    ]
                }
            },
            "patterns": [
                { "include": "#arguments" },
                {
                    "name": "keyword.control.directive.adc",
                    "match": "(?i)\\b(all_calls_remote|assert|assertion_policy|cpu|default_storage_pool|detect_blocking|discard_names|dispatching_domain|elaborate|elaborate_all|elaborate_body|independent|independent_component|inspection_point|linker_options|list|locking_policy|normalize_scalars|optimize|page|partial_elaboration_policy|preelaborable_initialization|preelaborate|priority_specific_dispatching|profile|pure|queueing_policy|relative_deadline|remote_call_interface|remote_types|restrictions|reviewable|shared_passive|storage_size|suppress|task_dispatching_policy|unchecked_union|unsuppress|volatile|volatile_components)\\b"
                },
                {
                    "name": "keyword.control.directive.adc",
                    "match": "(?i)\\b(abort_defer|ada_83|ada_95|ada_05|ada_2005|ada_12|ada_2012|annotate|assume_no_invalid_values|ast_entry|c_pass_by_copy|canonical_streams|check|check_name|check_policy|comment|common_object|compile_time_error|compile_time_warning|complete_representation|complex_representation|component_alignment|convention_identifier|cpp_class|cpp_constructor|cpp_virtual|cpp_vtable|debug|debug_policy|elaboration_checks|eliminate|export_exception|export_function|export_object|export_procedure|export_value|export_valued_procedure|extend_system|extensions_allowed|external|external_name_casing|fast_math|favor_top_level|finalize_storage_only|float_representation|ident|implemented|implicit_packing|import_exception|import_function|import_object|import_procedure|import_valued_procedure|initialize_scalars|inline_always|inline_generic|interface_name|interrupt_state|invariant|keep_names|license|link_with|linker_alias|linker_constructor|linker_destructor|linker_section|long_float|machine_attribute|main|main_storage|no_body|no_strict_aliasing|obsolescent|optimize_alignment|ordered|passive|persistent_bss|polling|postcondition|precondition|profile_warnings|propagate_exceptions|psect_object|pure_function|restriction_warnings|share_generic|short_circuit_and_or|short_descriptors|simple_storage_pool_type|source_file_name|source_file_name_project|source_reference|static_elaboration_desired|stream_convert|style_checks|subtitle|suppress_all|suppress_exception_locations|suppress_initialization|task_info|task_name|task_storage|test_case|thread_body|thread_local_storage|time_slice|title|unimplemented_unit|universal_aliasing|universal_data|unmodified|unreferenced|unreferenced_objects|unreserve_all_interrupts|use_vads_size|validity_checks|warnings|weak_external|wide_character_encoding)\\b"
                },
                {
                    "name": "invalid.deprecated.ada",
                    "match": "(?i)\\b(asynchronous|atomic|atomic_components|attach_handler|controlled|convention|export|import|inline|interface|interrupt_handler|interrupt_priority|memory_size|no_return|pack|priority|shared|storage_unit|system_name)\\b"
                }
            ]
        },
        "arguments": {
            "name": "meta.arguments.adc",
            "begin": "[(]",
            "end": "[)]"
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.adc",
                    "match": "(?i)\\bpragma\\b"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "name": "punctuation.adc",
                    "match": "[()]"
                },
                {
                    "name": "punctuation.separator.adc",
                    "match": ","
                },
                {
                    "name": "punctuation.terminator.adc",
                    "match": ";"        
                }
            ]
        }
    },
    "scopeName": "source.adc"
}