{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Ada",
	"patterns": [
		{ "include": "#comment" },
		{ "include": "#pragma" },
		{ "include": "#type_declaration" }
	],
	"repository": {
		"array_type_definition": {
			"name": "meta.declaration.type.definition.array.ada",
			"patterns": [
				{ "include": "#unconstrained_array_definition" },
				{ "include": "#constrained_array_definition" },
				{ "include": "#component_definition" }
			]
		},
		"based_literal": {
			"name": "constant.numeric.ada",
			"match": "(?i)(\\d(_?\\d)*#)[0-9a-f](_?[0-9a-f])*(\\.[0-9a-f](_?[0-9a-f])*)?(#)([eE](\\+|\\-)?\\d(_?\\d)*)?",
			"captures": {
				"1": {
					"name": "constant.numeric.base.ada"
				},
				"4": {
					"patterns": [
						{
							"name": "punctuation.radix-point.ada",
							"match": "\\."
						}
					]
				},
				"6": {
					"name": "constant.numeric.base.ada"
				},
				"7": {
					"patterns": [
						{
							"name": "punctuation.exponent-mark.ada",
							"match": "[eE]"
						}
					]
				}
			}
		},
		"basic_declaration": {
			"name": "meta.declaration.ada",
			"patterns": [
				{ "include": "#type_declaration" },
				{ "include": "#subtype_declaration" },
				{ "include": "#object_declaration" },
				{ "include": "#number_declaration" },
				{ "include": "#subprogram_declaration" },
				{ "include": "#abstract_subprogram_declaration" },
				{ "include": "#null_procedure_declaration" },
				{ "include": "#expression_function_declaration" },
				{ "include": "#package_declaration" },
				{ "include": "#renaming_declaration" },
				{ "include": "#exception_declaration" },
				{ "include": "#generic_declaration" },
				{ "include": "#generic_instantiation" }
			]
		},
		"character_literal": {
			"name": "string.quoted.single.ada",
			"match": "'.'",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "punctuation.definition.string.ada",
							"match": "'"
						}
					]
				}
			}
		},
		"comment": {
			"name": "comment.line.double-dash.ada",
			"match": "--.*$"
		},
		"component_definition": {
			"name": "meta.declaration.type.definition.component.ada",
			"begin": "(?i)\\bof\\b",
			"end": "(?=;)",
			"beginCaptures": {
				"0": { "name": "keyword.ada" }
			},
			"patterns": [
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\baliased\\b"
				},
				{ "include": "#subtype_indication" },
				{ "include": "#access_definition" }
			]
		},
		"decimal_literal": {
			"name": "constant.numeric.ada",
			"match": "\\d(_?\\d)*(\\.\\d(_?\\d)*)?([eE](\\+|\\-)?\\d(_?\\d)*)?",
			"captures": {
				"2": {
					"patterns": [
						{
							"name": "punctuation.radix-point.ada",
							"match": "\\."
						}
					]
				},
				"4": {
					"patterns": [
						{
							"name": "punctuation.exponent-mark.ada",
							"match": "[eE]"
						}
					]
				}
			}
		},
		"defining_character_literal": {
			"patterns": [
				{ "include": "#character_literal" }
			]
		},
		"defining_identifier": {
			"patterns": [
				{ "include": "#identifier" }
			]
		},
		"digits_constraint": {
			"name": "meta.constraint.digits.ada",
			"begin": "(?i)\\bdigits\\b",
			"end": "(?i)(?=(;|range))\\b",
			"beginCaptures": {
				"0": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{ "include": "#simple_expression" }
			]
		},
		"enumeration_literal_specification": {
			"patterns": [
				{ "include": "#defining_identifier" },
				{ "include": "#defining_character_literal" }
			]
		},
		"enumeration_type_definition": {
			"name": "meta.declaration.type.definition.enumeration.ada",
			"begin": "(?i)\\b(is)\\s+(\\()",
			"end": "\\)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "punctuation.ada" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				}
			]
		},
		"fixed_point_definition": {
			"name": "meta.declaration.type.definition.real.fixed-point.ada",
			"begin": "(?i)\\b(is)\\s+(delta)\\b",
			"end": "(?=;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{ "include": "#digits_constraint" },
				{ "include": "#range_constraint" },
				{ "include": "#simple_expression" }
			]
		},
		"floating_point_definition": {
			"name": "meta.declaration.type.definition.real.floating-point.ada",
			"begin": "(?i)\\b(is)\\s+(digits)\\b",
			"end": "(?=;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{ "include": "#range_constraint" },
				{ "include": "#simple_expression" }
			]
		},
		"full_type_declaration": {
			"patterns": [
				{ "include": "#regular_type_declaration" },
				{ "include": "#task_type_declaration" },
				{ "include": "#protected_type_declaration" }
			]
		},
		"identifier": {
			"name": "meta.identifier.ada",
			"match": "(\\w|\\d|_)+"
		},
		"index_subtype_definition": {
			"name": "meta.declaration.type.definition.array.index-subtype.ada",
			"begin": "\\b(\\w|\\d|\\.|_)+\\b",
			"end": "\\<\\>",
			"beginCaptures": {
				"0": { "patterns": [ { "include": "#subtype_mark" } ] }
			},
			"endCaptures": {
				"0": { "name": "keyword.operator.unknown.ada" }
			},
			"patterns": [
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\brange\\b"
				}
			]
		},
		"integer_type_definition": {
			"name": "meta.declaration.type.definition.integer.ada",
			"patterns": [
				{ "include": "#signed_integer_type_definition" },
				{ "include": "#modular_type_definition" }
			]
		},
		"modular_type_definition": {
			"name": "meta.declaration.type.definition.integer.modular.ada",
			"begin": "(?i)\\b(is)\\s+(mod)\\b",
			"end": "(?=;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{ "include": "#simple_expression" }
			]
		},
		"numeric_literal": {
			"name": "meta.literal.numeric.ada",
			"patterns": [
				{ "include": "#based_literal" },
				{ "include": "#decimal_literal" }
			]
		},
		"pragma": {
			"name": "meta.pragma.ada",
			"begin": "(?i)\\b(pragma)\\s+((?:\\w|\\d|_)+)\\b",
			"end": ";",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "keyword.control.directive.ada" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{ "include": "#pragma_arguments" }
			]
		},
		"pragma_arguments": {
			"name": "meta.pragma.arguments.ada",
			"begin": "\\(",
			"end": "\\)",
			"captures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				},
				{ "include": "#pragma_argument_association" }
			]
		},
		"pragma_argument_association": {
			"name": "meta.pragma.argument.association.ada",
			"patterns": [
				{ "include": "#expression" },
				{ "include": "#identifier" }
			]
		},
		"range": {
			"name": "meta.range.ada",
			"begin": "(?=.)",
			"end": "(?=;)",
			"patterns": [
				{
					"name": "keyword.operator.ada",
					"match": "\\.\\."
				},
				{ "include": "#simple_expression" }
			]
		},
		"range_constraint": {
			"name": "meta.constraint.range.ada",
			"begin": "(?i)\\brange\\b",
			"end": "(?=;)",
			"beginCaptures": {
				"0": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{ "include": "#range" }
			]
		},
		"real_type_definition": {
			"name": "meta.declaration.type.definition.real.ada",
			"patterns": [
				{ "include": "#floating_point_definition" },
				{ "include": "#fixed_point_definition" }
			]
		},
		"regular_type_declaration": {
			"begin": "(?i)\\b(type)\\s+((?:\\w|\\d|_)+)\\b",
			"end": ";",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.type.ada" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{ "include": "#type_definition" }
			]
		},
		"signed_integer_type_definition": {
			"name": "meta.declaration.type.definition.integer.signed.ada",
			"begin": "(?i)\\b(is)\\s+(range)\\b",
			"end": "(?=;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{ "include": "#range" }
			]
		},
		"simple_expression": {
			"name": "meta.expression.simple.ada",
			"patterns": [
				{ "include": "#numeric_literal" }
			]
		},
		"string_literal": {
			"name": "string.quoted.double.ada",
			"match": "(\")([^\"][^\"])*(\")",
			"captures": {
				"1": {
					"name": "punctuation.definition.string.ada"
				},
				"3": {
					"name": "punctuation.definition.string.ada"
				}
			}
		},
		"subtype_indication": {
			"name": "meta.declaration.subtype.indication.ada",
			"begin": "(?i)\\b(null)\\s+((\\w|\\d|\\.|_)+)\\b",
			"end": "(?=;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "patterns": [ { "include": "#subtype_mark" } ] }
			},
			"patterns": [
				{ "include": "#constraint" }
			]
		},
		"subtype_mark": {
			"name": "meta.subtype-mark.ada",
			"match": "\\b(\\w|\\d|\\.|_)+\\b",
			"captures": {
				"0": {
					"name": "storage.type.ada"
				}
			}
		},
		"type_declaration": {
			"name": "meta.declaration.type.ada",
			"patterns": [
				{ "include": "#full_type_declaration" },
				{ "include": "#incomplete_type_declaration" },
				{ "include": "#private_type_declaration" },
				{ "include": "#private_extension_declaration" }
			]
		},
		"type_definition": {
			"name": "meta.declaration.type.definition.ada",
			"patterns": [
				{ "include": "#enumeration_type_definition" },
				{ "include": "#integer_type_definition" },
				{ "include": "#real_type_definition" },
				{ "include": "#array_type_definition" },
				{ "include": "#record_type_definition" },
				{ "include": "#access_type_definition" },
				{ "include": "#derived_type_definition" },
				{ "include": "#interface_type_definition" }
			]
		},
		"unconstrained_array_definition": {
			"name": "meta.declaration.type.definition.array.unconstrained.ada",
			"begin": "(?i)\\b(is)\\s+(array)\\s*(\\()",
			"end": "\\)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" },
				"3": { "name": "punctuation.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				},
				{ "include": "#index_subtype_definition" }
			]
		}
	},
	"scopeName": "source.ada"
}