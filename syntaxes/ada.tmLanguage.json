{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Ada",
	"patterns": [
		{ "include": "#comment" },
		{ "include": "#import" },
		{ "include": "#package-spec" },
		{ "include": "#package-body" }
	],
	"repository": {
		"aspect": {
			"name": "meta.aspect.ada",
			"begin": "(?i)\\bwith\\b",
			"end": "(?i)((?=;)|is)",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "keyword.ada",
							"match": "(?i)\\b(with|is)\\b"
						}
					]
				}
			},
			"patterns": [
				{
					"name": "keyword.control.directive.ada",
					"match": "\\b(\\w|\\d|_)+\\b",
					"captures": {
						"0": {
							"patterns": [
								{ "include": "#underline"}
							]
						}
					}
				},
				{ "include": "#delimiter" }
			]
		},
		"attribute": {
			"name": "meta.attribute.ada",
			"match": "'(\\w|_)+\\b",
			"captures": {
				"0": {
					"patterns": [
						{ "include": "#delimiter" },
						{
							"name": "entity.other.attribute-name.ada",
							"match": "\\b(\\w|_)+\\b",
							"captures": {
								"0": {
									"patterns": [
										{ "include": "#underline" }
									]
								}
							}
						}
					]
				}
			}
		},
		"section-comment": {
			"name": "comment.line.double-dash.ada",
			"match": "--[^-]+--\\s*$",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "entity.name.section",
							"match": "[^-]+"
						}
					]
				}
			}
		},
		"comment": {
			"name": "comment.line.double-dash.ada",
			"match": "--.*$",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "comment.block.documentation.gnatdoc",
							"match": "@.*$",
							"captures": {
								"0": {
									"patterns": [
										{
											"name": "entity.name.tag.gnatdoc",
											"match": "@\\w+",
											"captures": {
												"0": {
													"patterns": [
														{
															"name": "punctuation.definition.tag.gnatdoc",
															"match": "@"
														}
													]
												}
											}
										}
									]
								}
							}
						}
					]
				}
			}
		},
		"delimiter": {
			"name": "punctuation.delimiter.ada",
			"match": "(=>|\\||'|[()]|\\.|,)"
		},
		"function-rename": {
			"name": "meta.function.rename.ada",
			"match": "(?i)\\brenames\\s(\\w|\\.|_)+('(\\w|_)+)?\\b",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "keyword.ada",
							"match": "(?i)\\b(renames)\\b"
						},
						{ "include": "#attribute" },
						{
							"name": "entity.name.function.ada",
							"match": "\\b(\\w|\\.|_)+\\b",
							"captures": {
								"0": {
									"patterns": [
										{ "include": "#delimiter" },
										{ "include": "#underline" }
									]
								}
							}
						}
					]
				}
			}
		},
		"function-return": {
			"name": "meta.return-type.ada",
			"match": "(?i)\\breturn\\s+(\\w|\\.|_)+('(\\w|_)+)?\\b",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "keyword.ada",
							"match": "(?i)\\b(return)\\b"
						},
						{ "include": "#attribute" },
						{
							"name": "entity.name.type.ada",
							"match": "\\b(\\w|\\.|_)+\\b",
							"captures": {
								"0": {
									"patterns": [
										{ "include": "#underline" }
									]
								}
							}
						}
					]
				}
			}
		},
		"function-spec": {
			"name": "meta.function.spec.ada",
			"begin": "(?i)\\bfunction\\b",
			"end": ";",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "keyword.ada",
							"match": "(?i)\\b(function)\\b"
						}		
					]
				}
			},
			"patterns": [
				{ "include": "#parameter-profile" },
				{ "include": "#function-rename" },
				{ "include": "#function-return" },
				{ "include": "#aspect" },
				{
					"name": "entity.name.function.ada",
					"match": "\\b(\\w|_)+\\b",
					"captures": {
						"0": {
							"patterns": [
								{ "include": "#underline" }
							]
						}
					}
				},
				{ "include": "#terminator" }
			]
		},
		"import": {
			"name": "meta.import.package.ada",
			"match": "(?i)\\b(use|with)\\s+(\\w|\\.|_)+(\\s*,\\s*(\\w|\\.|_)+)?\\s*;",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "keyword.ada",
							"match": "(?i)\\b(use|with)\\b"
						},
						{ "include": "#delimiter" },
						{ "include": "#underline" },
						{ "include": "#terminator" }
					]
				}
			}
		},
		"package-spec": {
			"name": "meta.package.spec.ada",
			"begin": "(?i)package\\s+((\\w|\\.|_)+)\\s+(with.*)?is",
			"end": "(?i)end\\s+(\\1);",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "keyword.ada",
							"match": "(?i)\\b(end|is|package)\\b"
						},
						{ "include": "#aspect" },
						{ "include": "#terminator" }
					]
				}
			},
			"patterns": [
				{ "include": "#function-spec" },
				{ "include": "#section-comment" },
				{ "include": "#comment" }
			]
		},
		"package-body": {
			"name": "meta.package.body.ada",
			"begin": "(?i)package\\s+body\\s+((\\w|\\.|_)+)\\s+is",
			"end": "(?i)end\\s+(\\1)+;",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "keyword.ada",
							"match": "(?i)\\b(body|end|is|package)\\b"
						},
						{ "include": "terminator" }
					]
				}	
			},
			"patterns": [
				{ "include": "#section-comment" },
				{ "include": "#comment" }
			]
		},
		"parameter": {
			"name": "meta.parameter.ada",
			"match": "\\b(\\w|_)+(\\s*,\\s*(\\w|_)+)?\\s*:\\s*(in\\s+)?(out\\s+)?(\\w|\\.|_)+\\b;?",
			"captures": {
				"0": {
					"patterns": [
						{ "include": "#terminator" },
						{
							"name": "meta.type.annotation.ada",
							"match": ":\\s*(in\\s+)?(out\\s+)?(\\w|\\.|_)+\\b",
							"captures": {
								"0": {
									"patterns": [
										{
											"name": "storage.modifier.ada",
											"match": "(?i)\\b(in|out)\\b"
										},
										{
											"name": "storage.type.ada",
											"match": "\\b(\\w|\\.|_)+\\b",
											"captures": {
												"0": {
													"patterns": [
														{ "include": "#underline" }
													]
												}
											}
										}
									]
								}
							}
						},
						{
							"name": "variable.parameter.ada",
							"match": "\\b(\\w|_)+\\b"
						},
						{ "include": "#delimiter" }
					]
				}
			}
		},
		"parameter-profile": {
			"name": "meta.parameter-profile.ada",
			"begin": "\\(",
			"end": "\\)",
			"captures": {
				"0": {
					"patterns": [
						{ "include": "#delimiter" }
					]
				}
			},
			"patterns": [
				{ "include": "#parameter" }
			]
		},
		"terminator": {
			"name": "punctuation.terminator.ada",
			"match": ";"
		},
		"underline": {
			"name": "punctuation.underline.ada",
			"match": "_"
		}
	},
	"scopeName": "source.ada"
}